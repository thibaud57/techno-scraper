name: Deploy to VPS

on:
    push:
        branches: [main]
    workflow_dispatch:

jobs:
    # Appel au workflow de test
    tests:
        uses: ./.github/workflows/test.yml

    # Appel au workflow de construction
    build:
        uses: ./.github/workflows/build.yml
        needs: tests
        
    # Déploiement de l'application
    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Copy configuration files to VPS
              uses: appleboy/scp-action@v0.1.7
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USERNAME }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  port: ${{ secrets.SSH_PORT }}
                  source: "docker-compose.yml,scripts/deploy.sh"
                  target: "~/techno-scraper"
                  overwrite: true

            - name: Configure environment and deploy
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USERNAME }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  port: ${{ secrets.SSH_PORT }}
                  envs: API_KEY,GITHUB_TOKEN,GITHUB_ACTOR,GITHUB_REPOSITORY
                  script: |
                      # Aller dans le répertoire du projet
                      cd ~/techno-scraper

                      # Créer ou mettre à jour le fichier .env
                      cat > .env << EOL
                      # Configuration de l'application
                      DEBUG=${{ vars.DEBUG }}
                      API_KEY=${{ secrets.API_KEY }}

                      # Configuration du serveur
                      HOST=${{ vars.HOST }}
                      PORT=${{ vars.PORT }}

                      # Configuration des logs
                      LOG_LEVEL=${{ vars.LOG_LEVEL }}

                      # Configuration des retries
                      MAX_RETRIES=${{ vars.MAX_RETRIES }}
                      RETRY_BACKOFF_FACTOR=${{ vars.RETRY_BACKOFF_FACTOR }}
                      REQUEST_TIMEOUT=${{ vars.REQUEST_TIMEOUT }}

                      # User-Agent (optionnel, "random" pour générer aléatoirement)
                      USER_AGENT=${{ vars.USER_AGENT }}
                      EOL

                      # Rendre le script de déploiement exécutable
                      chmod +x scripts/deploy.sh
                      
                      # Définir les variables pour le script de déploiement
                      export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
                      export GITHUB_ACTOR=${{ github.actor }}
                      export GITHUB_REPOSITORY=${{ github.repository }}
                      
                      # Exécuter le script de déploiement
                      ./scripts/deploy.sh
