name: Deploy to VPS

on:
    push:
        branches: [main]
    workflow_dispatch:

jobs:
    # Appel au workflow de test
    tests:
        uses: ./.github/workflows/test.yml

    # Appel au workflow de construction
    build:
        uses: ./.github/workflows/build.yml
        needs: tests
        
    # Déploiement de l'application
    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Deploy to VPS
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USERNAME }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  port: ${{ secrets.SSH_PORT }}
                  script: |
                      # Créer le répertoire du projet s'il n'existe pas
                      mkdir -p ~/techno-scraper

                      # Aller dans le répertoire du projet
                      cd ~/techno-scraper

                      # Créer ou mettre à jour le fichier .env
                      cat > .env << EOL
                      DEBUG=False
                      API_KEY=${{ secrets.API_KEY }}
                      HOST=0.0.0.0
                      PORT=8000
                      LOG_LEVEL=INFO
                      MAX_RETRIES=3
                      RETRY_BACKOFF_FACTOR=0.5
                      REQUEST_TIMEOUT=30
                      USER_AGENT=random
                      EOL

                      # Créer ou mettre à jour le fichier docker-compose.yml
                      cat > docker-compose.yml << EOL
                      version: "3.8"

                      networks:
                        my_network:
                          driver: bridge

                      services:
                        techno-scraper:
                          image: ghcr.io/${{ github.repository }}:latest
                          container_name: techno-scraper
                          restart: unless-stopped
                          ports:
                            - "127.0.0.1:8000:8000"
                          env_file:
                            - .env
                          networks:
                            - my_network
                          healthcheck:
                            test: ["CMD", "curl", "-f", "http://localhost:8000/status"]
                            interval: 30s
                            timeout: 10s
                            retries: 3
                            start_period: 5s
                      EOL

                      # Se connecter au GitHub Container Registry
                      echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

                      # Tirer la dernière image
                      docker pull ghcr.io/${{ github.repository }}:latest

                      # Arrêter et supprimer les conteneurs existants
                      docker-compose down

                      # Démarrer les nouveaux conteneurs
                      docker-compose up -d

                      # Vérifier que les conteneurs sont en cours d'exécution
                      docker-compose ps

                      # Nettoyer les images non utilisées
                      docker image prune -f
